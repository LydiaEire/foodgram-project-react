version: '3.3'

services:
  db:
    env_file:
      - .env
    image: postgres:12.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    environment:
      POSTGRES_DB: "db_name"
      POSTGRES_HOST_AUTH_METHOD: "trust"

  frontend:
    build:
      context: frontend
      dockerfile: frontend/Dockerfile
    volumes:
      - ../frontend/:/app/result_build/

    depends_on:
      - db

  backend:
    build:
      context: backend
      dockerfile: backend/Dockerfile
    restart: always
    volumes:
      - static_value:/code/static/
      - media_value:/code/media/
    depends_on:
      - db
      - frontend
    env_file:
      - .env


  nginx:
    image: nginx:1.19.3
    ports:
      - 80:80
    volumes:
      - static_value:/static/
      - media_value:/media/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
    depends_on:
      - backend
      - frontend

volumes:
    postgres_data:
    static_value:
    media_value:
